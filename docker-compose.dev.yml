version: "3.8"services:  webserver:    image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/investryx-nginx:latest    ports:      - "80:80"      - "443:443"    extra_hosts:      - "host.docker.internal:host-gateway"    networks:      - investryx_network    depends_on:      - backend    volumes:      - /etc/letsencrypt:/etc/letsencrypt    env_file:      - .env  backend:    image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/investryx-backend:latest    command: >      /app/venv/bin/gunicorn smerger.wsgi:application      --bind 0.0.0.0:8000      --workers 4      --threads 4      --worker-class sync      --max-requests 1000      --max-requests-jitter 50      --timeout 120      --keep-alive 5    extra_hosts:      - "host.docker.internal:host-gateway"    env_file:      - .env    depends_on:      - redis    networks:      - investryx_network  redis:    image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/investryx-redis:latest    command: redis-server --appendonly yes    networks:      - investryx_network  uvicorn:    image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/investryx-backend:latest    command: >      /app/venv/bin/gunicorn smerger.asgi:application      --bind 0.0.0.0:8001      --workers 4      --worker-class uvicorn.workers.UvicornWorker      --timeout 300      --keep-alive 65    extra_hosts:      - "host.docker.internal:host-gateway"    env_file:      - .env    depends_on:      - backend      - redis    networks:      - investryx_network  migrate_db:    image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/investryx-backend:latest    command: >      bash -c "      /app/venv/bin/python3 manage.py makemigrations --noinput &&      /app/venv/bin/python3 manage.py migrate auth &&      /app/venv/bin/python3 manage.py migrate contenttypes &&      /app/venv/bin/python3 manage.py migrate admin &&      /app/venv/bin/python3 manage.py migrate sessions &&      /app/venv/bin/python3 manage.py migrate --noinput &&      /app/venv/bin/python3 manage.py createcachetable      "    env_file:      - .env    extra_hosts:      - "host.docker.internal:host-gateway"    depends_on:      - backend    networks:      - investryx_network  migrate_setup:    image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/investryx-backend:latest    command: >      /app/venv/bin/python3 manage.py create_superuser &&      /app/venv/bin/python3 manage.py collectstatic --noinput    env_file:      - .env    extra_hosts:      - "host.docker.internal:host-gateway"    depends_on:      - migrate_db    networks:      - investryx_networknetworks:  investryx_network:    driver: bridge