# Generated by Django 5.1.3 on 2025-05-26 09:17

import custom_storages
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import smerg_app.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.FileField(storage=custom_storages.MediaStorage(), upload_to='banners/images')),
                ('type', models.CharField(choices=[('business', 'Business'), ('advisor', 'Advisor'), ('franchise', 'Franchise'), ('investor', 'Investor'), ('all', 'All')], max_length=100)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('validity_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('rate', models.IntegerField(default=0)),
                ('description', models.JSONField()),
                ('time_period', models.IntegerField(default=0)),
                ('post_number', models.IntegerField()),
                ('feature', models.BooleanField(default=False)),
                ('recommend', models.BooleanField(default=False)),
                ('type', models.CharField(choices=[('business', 'Business'), ('investor', 'Investor'), ('franchise', 'Franchise'), ('advisor', 'Advisor')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Query',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=1000)),
                ('lastname', models.CharField(max_length=1000)),
                ('email', models.EmailField(max_length=1000)),
                ('number', models.CharField(max_length=1000)),
                ('message', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('image', models.FileField(blank=True, null=True, storage=custom_storages.MediaStorage(), upload_to='profile/images')),
                ('onesignal_id', models.CharField(blank=True, max_length=100, null=True)),
                ('block', models.BooleanField(default=False)),
                ('total_hr_spend', models.FloatField(default=0.0)),
                ('active_from', models.DateTimeField(blank=True, null=True)),
                ('inactive_from', models.DateTimeField(blank=True, null=True)),
                ('deactivate', models.BooleanField(default=False)),
                ('deactivated_on', models.DateField(blank=True, null=True)),
                ('verified', models.BooleanField(default=False)),
                ('mobile_device', models.CharField(blank=True, max_length=500, null=True)),
                ('web_device', models.CharField(blank=True, max_length=500, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', smerg_app.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AadhaarDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('number', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('dob', models.CharField(blank=True, max_length=50, null=True)),
                ('gender', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.JSONField(blank=True, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='aadhaar/image')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(default='', max_length=500)),
                ('action', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=500)),
                ('description', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('img', models.FileField(blank=True, null=True, storage=custom_storages.MediaStorage(), upload_to='combined/images')),
                ('rate', models.IntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('image', models.FileField(blank=True, null=True, storage=custom_storages.MediaStorage(), upload_to='notification/image')),
                ('url', models.URLField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('read_by', models.ManyToManyField(blank=True, related_name='read_notifications', to=settings.AUTH_USER_MODEL)),
                ('user', models.ManyToManyField(related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Preference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile', models.CharField(max_length=500)),
                ('city', models.CharField(blank=True, max_length=500, null=True)),
                ('state', models.CharField(blank=True, max_length=500, null=True)),
                ('interested_city', models.JSONField(blank=True, null=True)),
                ('interested_state', models.JSONField(blank=True, null=True)),
                ('industries', models.JSONField(blank=True, null=True)),
                ('budget', models.CharField(blank=True, max_length=500, null=True)),
                ('price_starting', models.CharField(blank=True, max_length=500, null=True)),
                ('price_ending', models.CharField(blank=True, max_length=500, null=True)),
                ('frequency', models.CharField(blank=True, max_length=500, null=True)),
                ('type', models.CharField(blank=True, max_length=500, null=True)),
                ('business_stage', models.CharField(blank=True, max_length=500, null=True)),
                ('business_goal', models.CharField(blank=True, max_length=500, null=True)),
                ('business_duration', models.CharField(blank=True, max_length=500, null=True)),
                ('investment_interest', models.CharField(blank=True, max_length=500, null=True)),
                ('investment_horizon', models.CharField(blank=True, max_length=500, null=True)),
                ('risk_tolerence', models.CharField(blank=True, max_length=500, null=True)),
                ('investment_experiance', models.CharField(blank=True, max_length=500, null=True)),
                ('buy_start', models.CharField(blank=True, max_length=500, null=True)),
                ('franchise_type', models.CharField(blank=True, max_length=500, null=True)),
                ('franchise_brands', models.CharField(blank=True, max_length=500, null=True)),
                ('expertise', models.CharField(blank=True, max_length=500, null=True)),
                ('client_type', models.CharField(blank=True, max_length=500, null=True)),
                ('advisor_experiance', models.CharField(blank=True, max_length=500, null=True)),
                ('advisory_duration', models.CharField(blank=True, max_length=500, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SaleProfiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, default='', null=True)),
                ('single_desc', models.TextField(blank=True, default='', null=True)),
                ('entity_type', models.CharField(choices=[('business', 'Business'), ('investor', 'Investor'), ('franchise', 'Franchise'), ('advisor', 'Advisor')], max_length=50)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('impressions', models.IntegerField(default=0)),
                ('industry', models.CharField(blank=True, max_length=100, null=True)),
                ('url', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('establish_yr', models.CharField(blank=True, max_length=100, null=True)),
                ('ebitda', models.IntegerField(blank=True, null=True)),
                ('listed_on', models.DateTimeField(auto_now=True)),
                ('range_starting', models.IntegerField(blank=True, null=True)),
                ('range_ending', models.IntegerField(blank=True, null=True)),
                ('type_sale', models.CharField(blank=True, max_length=1000, null=True)),
                ('address_1', models.TextField(blank=True, null=True)),
                ('address_2', models.TextField(blank=True, null=True)),
                ('pin', models.IntegerField(blank=True, null=True)),
                ('employees', models.IntegerField(blank=True, default=0, null=True)),
                ('avg_monthly', models.IntegerField(blank=True, null=True)),
                ('latest_yearly', models.IntegerField(blank=True, null=True)),
                ('entity', models.CharField(blank=True, max_length=100, null=True)),
                ('features', models.TextField(blank=True, null=True)),
                ('facility', models.TextField(blank=True, null=True)),
                ('top_selling', models.TextField(blank=True, null=True)),
                ('income_source', models.TextField(blank=True, null=True)),
                ('reason', models.TextField(blank=True, null=True)),
                ('asking_price', models.CharField(blank=True, max_length=100, null=True)),
                ('company', models.CharField(blank=True, max_length=100, null=True)),
                ('location_interested', models.TextField(blank=True, null=True)),
                ('evaluating_aspects', models.TextField(blank=True, null=True)),
                ('preference', models.JSONField(blank=True, null=True)),
                ('profile_summary', models.TextField(blank=True, null=True)),
                ('initial', models.IntegerField(blank=True, null=True)),
                ('proj_ROI', models.CharField(blank=True, max_length=100, null=True)),
                ('avg_monthly_sales', models.IntegerField(blank=True, null=True)),
                ('locations_available', models.CharField(blank=True, max_length=1000, null=True)),
                ('offering', models.TextField(blank=True, null=True)),
                ('total_outlets', models.TextField(blank=True, null=True)),
                ('yr_period', models.CharField(blank=True, max_length=100, null=True)),
                ('supports', models.TextField(blank=True, null=True)),
                ('services', models.TextField(blank=True, null=True)),
                ('min_space', models.IntegerField(blank=True, null=True)),
                ('max_space', models.IntegerField(blank=True, null=True)),
                ('brand_fee', models.IntegerField(blank=True, null=True)),
                ('staff', models.IntegerField(blank=True, null=True)),
                ('number', models.CharField(blank=True, max_length=17, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('interest', models.CharField(blank=True, max_length=500, null=True)),
                ('designation', models.CharField(blank=True, max_length=100, null=True)),
                ('experience', models.CharField(blank=True, max_length=100, null=True)),
                ('profile', models.FileField(blank=True, null=True, storage=custom_storages.MediaStorage(), upload_to='combined/images/profile')),
                ('logo', models.FileField(blank=True, null=True, storage=custom_storages.MediaStorage(), upload_to='combined/images')),
                ('image1', models.FileField(blank=True, null=True, storage=custom_storages.MediaStorage(), upload_to='combined/images')),
                ('image2', models.FileField(blank=True, null=True, storage=custom_storages.MediaStorage(), upload_to='combined/images')),
                ('image3', models.FileField(blank=True, null=True, storage=custom_storages.MediaStorage(), upload_to='combined/images')),
                ('image4', models.FileField(blank=True, null=True, storage=custom_storages.MediaStorage(), upload_to='combined/images')),
                ('doc1', models.FileField(blank=True, null=True, storage=custom_storages.MediaStorage(), upload_to='combined/docs')),
                ('doc2', models.FileField(blank=True, null=True, storage=custom_storages.MediaStorage(), upload_to='combined/docs')),
                ('doc3', models.FileField(blank=True, null=True, storage=custom_storages.MediaStorage(), upload_to='combined/docs')),
                ('doc4', models.FileField(blank=True, null=True, storage=custom_storages.MediaStorage(), upload_to='combined/docs')),
                ('proof1', models.FileField(blank=True, null=True, storage=custom_storages.MediaStorage(), upload_to='combined/proof')),
                ('proof2', models.FileField(blank=True, null=True, storage=custom_storages.MediaStorage(), upload_to='combined/proof')),
                ('proof3', models.FileField(blank=True, null=True, storage=custom_storages.MediaStorage(), upload_to='combined/proof')),
                ('proof4', models.FileField(blank=True, null=True, storage=custom_storages.MediaStorage(), upload_to='combined/proof')),
                ('block', models.BooleanField(default=False)),
                ('verified', models.BooleanField(default=False)),
                ('subscribed', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(blank=True, null=True)),
                ('reason_type', models.CharField(max_length=255)),
                ('report_type', models.CharField(choices=[('post', 'Post'), ('profile', 'Profile')], max_length=10)),
                ('status', models.CharField(choices=[('completed', 'Completed'), ('pending', 'Pending'), ('in_progress', 'In Progress')], default='pending', max_length=50)),
                ('created_at', models.DateField(auto_now_add=True, null=True)),
                ('reported_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('reported_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userprofile_reported', to=settings.AUTH_USER_MODEL)),
                ('report_post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='smerg_app.saleprofiles')),
            ],
        ),
        migrations.CreateModel(
            name='RecentActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='smerg_app.saleprofiles')),
            ],
        ),
        migrations.CreateModel(
            name='Enquiries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_id', models.IntegerField(blank=True, default=0, null=True)),
                ('created', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='smerg_app.saleprofiles')),
            ],
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now=True)),
                ('count', models.PositiveIntegerField(default=1, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='smerg_app.saleprofiles')),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expiry_date', models.DateField()),
                ('remaining_posts', models.IntegerField()),
                ('transaction_id', models.CharField(max_length=100)),
                ('subscribed_on', models.DateField(auto_now=True)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='smerg_app.plan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Suggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suggestions', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.IntegerField(default=0)),
                ('testimonial', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('advisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='smerg_app.saleprofiles')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_time', models.DateTimeField()),
                ('logout_time', models.DateTimeField(blank=True, null=True)),
                ('session_duration', models.IntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='smerg_app.saleprofiles')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
